package CellularAutomata.FF_Rothermel;

import FF_Rothermel.FireEnvironment;
import FF_Rothermel.FireEnvironment_TCP;
import model.modeling.CAModels.TwoDimCellSpace;

public class EnvironmentCellTest extends TwoDimCellSpace {

    public EnvironmentCellTest() {
        this(100, 100);
    }

    public EnvironmentCellTest(int rows, int columns) {
        super("moor", rows, columns);
        this.numCells = rows * columns;

        FuelModel[][] fuelModels = ImageInterpreter.readImage(rows, columns);
        CellUtils.init(5, 5, 100);
        ROS_Calculator rosCalculator = new ROS_Calculator();

        for (int i = 0; i < xDimCellspace; i++) {
            for (int j = 0; j < yDimCellspace; j++) {
                EnvironmentCell cell = new EnvironmentCell(j, i);
                addCell(cell);
                if (i == rows / 2 && j == columns / 2) {
                    cell.setStartFire(true);
                }
                cell.setFuelmodel(fuelModels[j][i]);
                cell.setRosCalculator(rosCalculator);
            }
        }
        doNeighborToNeighborCoupling();
    }

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    @Override
    public void layoutForSimView() {
    }
}
